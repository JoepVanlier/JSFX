@init

// Very basic modal model
//
// Fundamental is given by:
//    f0 = (1 / 2L) * ct
// with L being the length, and ct being the transverse propagation speed, we opt for directly setting this for convenience
//
// Inharmonicity coefficient is given by:
//    B = kappa^2 * (ES / T0) * (pi / L) ** 2
//
// Here kappa^2 * ES reflects the stiffness and T0 the radius of gyration. We also just set it directly.

// Model of a single resonator is
//          b z^-1
// -------------------------
// 1 + a1 * z^-1 + a2 * z^-2
//
// pk = exp(2*pi*j*f/fs) exp(-1 / (tau * fs))

// Define: gamma_k = exp(-1 / (tau_k * fs))
// Given that 1 / tau_k = r_k = base_damp + f_damp * 2 * pi * fk
// We can rewrite gamma_k as exp(-r_k / fs)

// Define: omega_k = 2 * pi * f_k / fs

// bk = (A/fs) Im{pk} = (A/fs) * gamma_k * sin(omega_k)
// a1_k = -2 Re(pk) = -2 * gamma_k * cos(omega_k)
// a2_k = |pk|^2 = gamma_k

function update_global_parameters()
(
  base_damp = 10^damp;
  f_damp = 10^freq_damp;
  // relative_position = 0.1; // x_h / L
  soundboard_factor = $pi * 0.1; // $pi * T0 / L
  irate = 1.0 / srate;
  omega_base = 2 * $pi * irate;
  inharm = 10^inharmonic;
  Adivfs = 1.0 / srate;
);

function pars(f_0, k)
global(inharm, omega_base, base_damp, f_damp, irate, relative_position, soundboard_factor, Adivfs, srate)
local(f_k, omega_k, gamma_k, wb)
instance(b, a1, a2, win, wout)
(
  f_k = f_0 * k * sqrt(1 + inharm * (k-1) * (k-1));
  omega_k = f_k * omega_base;
  gamma_k = exp(- (base_damp + f_damp * 2.0 * $pi * f_k) * irate);
  
  wout = win = sin(k * $pi * relative_position);
  wb = k * soundboard_factor;
  
  // Scale such that we don't have to multiply by wb_k on the output.
  win *= wb;
  wout /= wb;
  
  (f_k < 0.48 * srate) ? (
    b = Adivfs * gamma_k * sin(omega_k) / f_k;
    a1 = -2 * gamma_k * cos(omega_k);
    a2 = gamma_k * gamma_k;
  ) : (
    b = a1 = a2 = 0;
  );
);

function qpars(f_0, k)
global(inharm, omega_base, base_damp, f_damp, irate, relative_position, soundboard_factor, Adivfs,
       cur_b, cur_a1, cur_a2, cur_win, cur_wout)
local(f_k, omega_k, gamma_k, wb)
(
  f_k = f_0 * k * sqrt(1 + inharm * (k-1) * (k-1));
  omega_k = f_k * omega_base;
  gamma_k = exp(- (base_damp + f_damp * 2.0 * $pi * f_k) * irate);
  
  cur_wout = cur_win = sin(k * $pi * relative_position);
  wb = k * soundboard_factor;
  
  // Scale such that we don't have to multiply by wb_k on the output.
  cur_win *= wb;
  cur_wout /= wb;
  
  cur_b = Adivfs * gamma_k * sin(omega_k) / f_k;
  cur_a1 = -2 * gamma_k * cos(omega_k);
  cur_a2 = gamma_k * gamma_k;
);

function tick(f_h)
instance(b, a1, a2, win, wout,
         y, yh)
local(hist)
global(f_hn, f_b)
(
  hist = yh; yh = y;
  y = win * b * f_h - a1 * y - a2 * hist;
  f_hn += wout * y;
  f_b += y;
);

function set_pars(f_0)
instance(f1u, f2u, f3u,
         f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63,
         l1, l2, l3, l4, l5, l6, l7,
         ticker)
local(fl)
global()
(
  ticker += 1;
  ticker > 256 ? (
    /*f1u.pars(f_0, 1.01);
    f2u.pars(f_0, 1.99);
    f3u.pars(f_0, 3.01);*/
  
  f1.pars(f_0, 1);
  f2.pars(f_0, 2);
  f3.pars(f_0, 3);
  f4.pars(f_0, 4);
  f5.pars(f_0, 5);
  f6.pars(f_0, 6);
  f7.pars(f_0, 7);
  f8.pars(f_0, 8);
  f9.pars(f_0, 9);
  f10.pars(f_0, 10);
  f11.pars(f_0, 11);
  f12.pars(f_0, 12);
  f13.pars(f_0, 13);
  f14.pars(f_0, 14);
  f15.pars(f_0, 15);
  f16.pars(f_0, 16);
  f17.pars(f_0, 17);
  f18.pars(f_0, 18);
  f19.pars(f_0, 19);
  f20.pars(f_0, 20);
  f21.pars(f_0, 21);
  f22.pars(f_0, 22);
  f23.pars(f_0, 23);
  f24.pars(f_0, 24);
  f25.pars(f_0, 25);
  f26.pars(f_0, 26);
  f27.pars(f_0, 27);
  f28.pars(f_0, 28);
  f29.pars(f_0, 29);
  f30.pars(f_0, 30);
  f31.pars(f_0, 31);
  f32.pars(f_0, 32);
  f33.pars(f_0, 33);
  f34.pars(f_0, 34);
  f35.pars(f_0, 35);
  f36.pars(f_0, 36);
  f37.pars(f_0, 37);
  f38.pars(f_0, 38);
  f39.pars(f_0, 39);
  f40.pars(f_0, 40);
  f41.pars(f_0, 41);
  f42.pars(f_0, 42);
  f43.pars(f_0, 43);
  f44.pars(f_0, 44);
  f45.pars(f_0, 45);
  f46.pars(f_0, 46);
  f47.pars(f_0, 47);
  f48.pars(f_0, 48);
  f49.pars(f_0, 49);
  f50.pars(f_0, 50);
  f51.pars(f_0, 51);
  f52.pars(f_0, 52);
  f53.pars(f_0, 53);
  f54.pars(f_0, 54);
  f55.pars(f_0, 55);
  f56.pars(f_0, 56);
  f57.pars(f_0, 57);
  f58.pars(f_0, 58);
  f59.pars(f_0, 59);
  f60.pars(f_0, 60);
  f61.pars(f_0, 61);
  f62.pars(f_0, 62);
  f63.pars(f_0, 63);
    
    /*fl = f_0 * 16;
    l1.pars(fl, 1);
    l2.pars(fl, 2);
    l3.pars(fl, 3);
    l4.pars(fl, 4);
    l5.pars(fl, 5);
    l6.pars(fl, 6);
    l7.pars(fl, 5);*/
    ticker = 0;
  );
);

function eval_long()
instance(l1, l2, l3, l4, l5, l6, l7,
         f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11)
global(f_hn)
local(ts_scale)
(
  ts_scale = 1500000000;
  
  l1.tick(ts_scale * (f6.y * f5.y + f5.y * f4.y + f4.y * f3.y + f3.y * f2.y));
  l2.tick(2 * ts_scale * (f6.y * f4.y + f5.y * f3.y + f4.y * f2.y + f3.y * f1.y));
  l3.tick(3 * ts_scale * (f7.y * f4.y + f6.y * f3.y + f5.y * f2.y + f4.y * f1.y));
  l4.tick(4 * ts_scale * (f8.y * f4.y + f7.y * f3.y + f6.y * f2.y + f5.y * f1.y));
  l5.tick(5 * ts_scale * (f9.y * f4.y + f8.y * f3.y + f7.y * f2.y + f6.y * f1.y));
  l6.tick(6 * ts_scale * (f10.y * f4.y + f9.y * f3.y + f8.y * f2.y + f7.y * f1.y));
  l7.tick(7 * ts_scale * (f11.y * f4.y + f10.y * f3.y + f9.y * f2.y + f8.y * f1.y));

  // Don't put this in the feedback -> Leads to instability
  f_hn = 0;
);

function eval_string_slow()
global(f_h, f_hn, f_b)
instance(
  f1u, f2u, f3u,
  f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16,
  f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32,
)
local(hist)
(
  /*
  f1u.tick(f_h);
  f2u.tick(f_h);
  f3u.tick(f_h);
  */

  f1.tick(f_h);
  f2.tick(f_h);
  f3.tick(f_h);
  f4.tick(f_h);
  f5.tick(f_h);
  f6.tick(f_h);
  f7.tick(f_h);
  f8.tick(f_h);
  f9.tick(f_h);
  f10.tick(f_h);
  f11.tick(f_h);
  f12.tick(f_h);
  f13.tick(f_h);
  f14.tick(f_h);
  f15.tick(f_h);
  f16.tick(f_h);
  f17.tick(f_h);
  f18.tick(f_h);
  f19.tick(f_h);
  f20.tick(f_h);
  f21.tick(f_h);
  f22.tick(f_h);
  f23.tick(f_h);
  f24.tick(f_h);
  f25.tick(f_h);
  f26.tick(f_h);
  f27.tick(f_h);
  f28.tick(f_h);
  f29.tick(f_h);
  f30.tick(f_h);
  f31.tick(f_h);
  f32.tick(f_h);
);

function eval_string(f_h)
global(partials)
instance(
  f1u, f2u, f3u,
  f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63,
  f_hn, f_b, active,
)
local(hist)
(
  /*
  f1u.tick(f_h);
  f2u.tick(f_h);
  f3u.tick(f_h);
  */
  active = max(0.999 * active, max(f_hn, abs(f_h)));
  
  (active > 0.00000001) ? (
    f_hn = f_b = 0;
    hist = f1.yh; f1.yh = f1.y; f1.y = f1.win * f1.b * f_h - f1.a1 * f1.y - f1.a2 * hist; f_hn += f1.wout * f1.y; f_b += f1.y;
    hist = f2.yh; f2.yh = f2.y; f2.y = f2.win * f2.b * f_h - f2.a1 * f2.y - f2.a2 * hist; f_hn += f2.wout * f2.y; f_b += f2.y;
    hist = f3.yh; f3.yh = f3.y; f3.y = f3.win * f3.b * f_h - f3.a1 * f3.y - f3.a2 * hist; f_hn += f3.wout * f3.y; f_b += f3.y;
    hist = f4.yh; f4.yh = f4.y; f4.y = f4.win * f4.b * f_h - f4.a1 * f4.y - f4.a2 * hist; f_hn += f4.wout * f4.y; f_b += f4.y;
    hist = f5.yh; f5.yh = f5.y; f5.y = f5.win * f5.b * f_h - f5.a1 * f5.y - f5.a2 * hist; f_hn += f5.wout * f5.y; f_b += f5.y;
    hist = f6.yh; f6.yh = f6.y; f6.y = f6.win * f6.b * f_h - f6.a1 * f6.y - f6.a2 * hist; f_hn += f6.wout * f6.y; f_b += f6.y;
    hist = f7.yh; f7.yh = f7.y; f7.y = f7.win * f7.b * f_h - f7.a1 * f7.y - f7.a2 * hist; f_hn += f7.wout * f7.y; f_b += f7.y;
    hist = f8.yh; f8.yh = f8.y; f8.y = f8.win * f8.b * f_h - f8.a1 * f8.y - f8.a2 * hist; f_hn += f8.wout * f8.y; f_b += f8.y;
    hist = f9.yh; f9.yh = f9.y; f9.y = f9.win * f9.b * f_h - f9.a1 * f9.y - f9.a2 * hist; f_hn += f9.wout * f9.y; f_b += f9.y;
    hist = f10.yh; f10.yh = f10.y; f10.y = f10.win * f10.b * f_h - f10.a1 * f10.y - f10.a2 * hist; f_hn += f10.wout * f10.y; f_b += f10.y;
    hist = f11.yh; f11.yh = f11.y; f11.y = f11.win * f11.b * f_h - f11.a1 * f11.y - f11.a2 * hist; f_hn += f11.wout * f11.y; f_b += f11.y;
    hist = f12.yh; f12.yh = f12.y; f12.y = f12.win * f12.b * f_h - f12.a1 * f12.y - f12.a2 * hist; f_hn += f12.wout * f12.y; f_b += f12.y;
    hist = f13.yh; f13.yh = f13.y; f13.y = f13.win * f13.b * f_h - f13.a1 * f13.y - f13.a2 * hist; f_hn += f13.wout * f13.y; f_b += f13.y;
    hist = f14.yh; f14.yh = f14.y; f14.y = f14.win * f14.b * f_h - f14.a1 * f14.y - f14.a2 * hist; f_hn += f14.wout * f14.y; f_b += f14.y;
    hist = f15.yh; f15.yh = f15.y; f15.y = f15.win * f15.b * f_h - f15.a1 * f15.y - f15.a2 * hist; f_hn += f15.wout * f15.y; f_b += f15.y;
    hist = f16.yh; f16.yh = f16.y; f16.y = f16.win * f16.b * f_h - f16.a1 * f16.y - f16.a2 * hist; f_hn += f16.wout * f16.y; f_b += f16.y;
    (partials > 16) ? (
      hist = f17.yh; f17.yh = f17.y; f17.y = f17.win * f17.b * f_h - f17.a1 * f17.y - f17.a2 * hist; f_hn += f17.wout * f17.y; f_b += f17.y;
      hist = f18.yh; f18.yh = f18.y; f18.y = f18.win * f18.b * f_h - f18.a1 * f18.y - f18.a2 * hist; f_hn += f18.wout * f18.y; f_b += f18.y;
      hist = f19.yh; f19.yh = f19.y; f19.y = f19.win * f19.b * f_h - f19.a1 * f19.y - f19.a2 * hist; f_hn += f19.wout * f19.y; f_b += f19.y;
      hist = f20.yh; f20.yh = f20.y; f20.y = f20.win * f20.b * f_h - f20.a1 * f20.y - f20.a2 * hist; f_hn += f20.wout * f20.y; f_b += f20.y;
      hist = f21.yh; f21.yh = f21.y; f21.y = f21.win * f21.b * f_h - f21.a1 * f21.y - f21.a2 * hist; f_hn += f21.wout * f21.y; f_b += f21.y;
      hist = f22.yh; f22.yh = f22.y; f22.y = f22.win * f22.b * f_h - f22.a1 * f22.y - f22.a2 * hist; f_hn += f22.wout * f22.y; f_b += f22.y;
      hist = f23.yh; f23.yh = f23.y; f23.y = f23.win * f23.b * f_h - f23.a1 * f23.y - f23.a2 * hist; f_hn += f23.wout * f23.y; f_b += f23.y;
      hist = f24.yh; f24.yh = f24.y; f24.y = f24.win * f24.b * f_h - f24.a1 * f24.y - f24.a2 * hist; f_hn += f24.wout * f24.y; f_b += f24.y;
      hist = f25.yh; f25.yh = f25.y; f25.y = f25.win * f25.b * f_h - f25.a1 * f25.y - f25.a2 * hist; f_hn += f25.wout * f25.y; f_b += f25.y;
      hist = f26.yh; f26.yh = f26.y; f26.y = f26.win * f26.b * f_h - f26.a1 * f26.y - f26.a2 * hist; f_hn += f26.wout * f26.y; f_b += f26.y;
      hist = f27.yh; f27.yh = f27.y; f27.y = f27.win * f27.b * f_h - f27.a1 * f27.y - f27.a2 * hist; f_hn += f27.wout * f27.y; f_b += f27.y;
      hist = f28.yh; f28.yh = f28.y; f28.y = f28.win * f28.b * f_h - f28.a1 * f28.y - f28.a2 * hist; f_hn += f28.wout * f28.y; f_b += f28.y;
      hist = f29.yh; f29.yh = f29.y; f29.y = f29.win * f29.b * f_h - f29.a1 * f29.y - f29.a2 * hist; f_hn += f29.wout * f29.y; f_b += f29.y;
      hist = f30.yh; f30.yh = f30.y; f30.y = f30.win * f30.b * f_h - f30.a1 * f30.y - f30.a2 * hist; f_hn += f30.wout * f30.y; f_b += f30.y;
      hist = f31.yh; f31.yh = f31.y; f31.y = f31.win * f31.b * f_h - f31.a1 * f31.y - f31.a2 * hist; f_hn += f31.wout * f31.y; f_b += f31.y;
      hist = f32.yh; f32.yh = f32.y; f32.y = f32.win * f32.b * f_h - f32.a1 * f32.y - f32.a2 * hist; f_hn += f32.wout * f32.y; f_b += f32.y;
      (partials > 32) ? (
        hist = f33.yh; f33.yh = f33.y; f33.y = f33.win * f33.b * f_h - f33.a1 * f33.y - f33.a2 * hist; f_hn += f33.wout * f33.y; f_b += f33.y;
        hist = f34.yh; f34.yh = f34.y; f34.y = f34.win * f34.b * f_h - f34.a1 * f34.y - f34.a2 * hist; f_hn += f34.wout * f34.y; f_b += f34.y;
        hist = f35.yh; f35.yh = f35.y; f35.y = f35.win * f35.b * f_h - f35.a1 * f35.y - f35.a2 * hist; f_hn += f35.wout * f35.y; f_b += f35.y;
        hist = f36.yh; f36.yh = f36.y; f36.y = f36.win * f36.b * f_h - f36.a1 * f36.y - f36.a2 * hist; f_hn += f36.wout * f36.y; f_b += f36.y;
        hist = f37.yh; f37.yh = f37.y; f37.y = f37.win * f37.b * f_h - f37.a1 * f37.y - f37.a2 * hist; f_hn += f37.wout * f37.y; f_b += f37.y;
        hist = f38.yh; f38.yh = f38.y; f38.y = f38.win * f38.b * f_h - f38.a1 * f38.y - f38.a2 * hist; f_hn += f38.wout * f38.y; f_b += f38.y;
        hist = f39.yh; f39.yh = f39.y; f39.y = f39.win * f39.b * f_h - f39.a1 * f39.y - f39.a2 * hist; f_hn += f39.wout * f39.y; f_b += f39.y;
        hist = f40.yh; f40.yh = f40.y; f40.y = f40.win * f40.b * f_h - f40.a1 * f40.y - f40.a2 * hist; f_hn += f40.wout * f40.y; f_b += f40.y;
        hist = f41.yh; f41.yh = f41.y; f41.y = f41.win * f41.b * f_h - f41.a1 * f41.y - f41.a2 * hist; f_hn += f41.wout * f41.y; f_b += f41.y;
        hist = f42.yh; f42.yh = f42.y; f42.y = f42.win * f42.b * f_h - f42.a1 * f42.y - f42.a2 * hist; f_hn += f42.wout * f42.y; f_b += f42.y;
        hist = f43.yh; f43.yh = f43.y; f43.y = f43.win * f43.b * f_h - f43.a1 * f43.y - f43.a2 * hist; f_hn += f43.wout * f43.y; f_b += f43.y;
        hist = f44.yh; f44.yh = f44.y; f44.y = f44.win * f44.b * f_h - f44.a1 * f44.y - f44.a2 * hist; f_hn += f44.wout * f44.y; f_b += f44.y;
        hist = f45.yh; f45.yh = f45.y; f45.y = f45.win * f45.b * f_h - f45.a1 * f45.y - f45.a2 * hist; f_hn += f45.wout * f45.y; f_b += f45.y;
        hist = f46.yh; f46.yh = f46.y; f46.y = f46.win * f46.b * f_h - f46.a1 * f46.y - f46.a2 * hist; f_hn += f46.wout * f46.y; f_b += f46.y;
        hist = f47.yh; f47.yh = f47.y; f47.y = f47.win * f47.b * f_h - f47.a1 * f47.y - f47.a2 * hist; f_hn += f47.wout * f47.y; f_b += f47.y;
        hist = f48.yh; f48.yh = f48.y; f48.y = f48.win * f48.b * f_h - f48.a1 * f48.y - f48.a2 * hist; f_hn += f48.wout * f48.y; f_b += f48.y;
        (partials > 48) ? (
          hist = f49.yh; f49.yh = f49.y; f49.y = f49.win * f49.b * f_h - f49.a1 * f49.y - f49.a2 * hist; f_hn += f49.wout * f49.y; f_b += f49.y;
          hist = f50.yh; f50.yh = f50.y; f50.y = f50.win * f50.b * f_h - f50.a1 * f50.y - f50.a2 * hist; f_hn += f50.wout * f50.y; f_b += f50.y;
          hist = f51.yh; f51.yh = f51.y; f51.y = f51.win * f51.b * f_h - f51.a1 * f51.y - f51.a2 * hist; f_hn += f51.wout * f51.y; f_b += f51.y;
          hist = f52.yh; f52.yh = f52.y; f52.y = f52.win * f52.b * f_h - f52.a1 * f52.y - f52.a2 * hist; f_hn += f52.wout * f52.y; f_b += f52.y;
          hist = f53.yh; f53.yh = f53.y; f53.y = f53.win * f53.b * f_h - f53.a1 * f53.y - f53.a2 * hist; f_hn += f53.wout * f53.y; f_b += f53.y;
          hist = f54.yh; f54.yh = f54.y; f54.y = f54.win * f54.b * f_h - f54.a1 * f54.y - f54.a2 * hist; f_hn += f54.wout * f54.y; f_b += f54.y;
          hist = f55.yh; f55.yh = f55.y; f55.y = f55.win * f55.b * f_h - f55.a1 * f55.y - f55.a2 * hist; f_hn += f55.wout * f55.y; f_b += f55.y;
          hist = f56.yh; f56.yh = f56.y; f56.y = f56.win * f56.b * f_h - f56.a1 * f56.y - f56.a2 * hist; f_hn += f56.wout * f56.y; f_b += f56.y;
          hist = f57.yh; f57.yh = f57.y; f57.y = f57.win * f57.b * f_h - f57.a1 * f57.y - f57.a2 * hist; f_hn += f57.wout * f57.y; f_b += f57.y;
          hist = f58.yh; f58.yh = f58.y; f58.y = f58.win * f58.b * f_h - f58.a1 * f58.y - f58.a2 * hist; f_hn += f58.wout * f58.y; f_b += f58.y;
          hist = f59.yh; f59.yh = f59.y; f59.y = f59.win * f59.b * f_h - f59.a1 * f59.y - f59.a2 * hist; f_hn += f59.wout * f59.y; f_b += f59.y;
          hist = f60.yh; f60.yh = f60.y; f60.y = f60.win * f60.b * f_h - f60.a1 * f60.y - f60.a2 * hist; f_hn += f60.wout * f60.y; f_b += f60.y;
          hist = f61.yh; f61.yh = f61.y; f61.y = f61.win * f61.b * f_h - f61.a1 * f61.y - f61.a2 * hist; f_hn += f61.wout * f61.y; f_b += f61.y;
          hist = f62.yh; f62.yh = f62.y; f62.y = f62.win * f62.b * f_h - f62.a1 * f62.y - f62.a2 * hist; f_hn += f62.wout * f62.y; f_b += f62.y;
          hist = f63.yh; f63.yh = f63.y; f63.y = f63.win * f63.b * f_h - f63.a1 * f63.y - f63.a2 * hist; f_hn += f63.wout * f63.y; f_b += f63.y;
        );
      );
    );
  );
);

