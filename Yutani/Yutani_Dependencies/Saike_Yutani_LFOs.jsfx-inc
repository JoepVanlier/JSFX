@init
twopi = $pi * 2;
invpi2 = .5/$pi;

max_lfo_types = 18;
function lfo_modulator(shape, t)
instance(state, lt, ct, y)
global(twopi, invpi2)
local()
(
  y = ( shape == 0 ) ? .5 + .5 * sin(twopi*t)
  : ( shape==1 )  ? ( abs(cos($pi*t)) )
  : ( shape==2 )  ? ( abs(sin($pi*t)) )
  : ( shape==3 )  ? ( t-floor(t) )
  : ( shape==4 )  ? ( 1-t+floor(t) )
  : ( shape==5 )  ? ( exp(-4*(t-floor(t))) )
  : ( shape==6 )  ? ( min((15*(t-floor(t))),1)*exp(-4*(t-floor(t))) )
  : ( shape==7 )  ? ( 1-exp(-4*(t-floor(t))) )
  : ( shape==8 ) ? ( exp(-t) )    
  : ( shape==9 ) ? ( min((15*t),1)*exp(-t) )
  : ( shape==10 ) ? ( 1-2*abs(t-floor(t)-0.5) )
  : ( shape==11 ) ? ( sin(twopi*t)*.3+.5 + sin(2*twopi*t)*.2 )
  : ( shape==12 ) ? ( sin(twopi*t)*.2+.5 + sin(2*twopi*t)*.2 + sin(4*twopi*t)*.1 )
  : ( shape==13 ) ? ( (t-floor(t)) < .0625 )
  : ( shape==14 ) ? ( (t-floor(t)) < .125 )
  : ( shape==15 ) ? ( (t-floor(t)) < .25 )
  : ( shape==16 ) ? ( (t-floor(t)) < .5 )
  : ( shape==17 ) ? ( (t-floor(t)) < (lt-floor(lt)) ? ct = rand(); lt = t; ct )
  : ( shape==18 ) ? ( rand() );
  
  /*: ( shape==17 ) ? ( (3*t-floor(3*t)) < .5 )
  : ( shape==18 ) ? ( ((8*t-floor(8*t)) < .5) * (.5 + .5*cos(twopi*t)) )
  : ( shape==19 ) ? ( ((4*t-floor(4*t)) < .25) * (.5 + .5*cos(twopi*t)) * .5 + .5 * ((3*t-floor(3*t)) > .25) * (.5 + .5*sin(twopi*t)) )
  : ( shape==20 ) ? ( ((8*t-floor(8*t)) < .25) * (.5 + .5*cos(twopi*t)) * .5 + .5 * ((6*t-floor(6*t)) > .25) * (.5 + .5*sin(twopi*t)) )
  : ( shape==21 ) ? ( ((8*t-floor(8*t)) < .5) * .5 + .5 * ((3*t-floor(6*t)) < .5) * (.5+.5*sin(twopi*t)) );*/
  
  t == 0 ? state = y;
  state = .98 * state + .02 * y
);

function draw_lfo(x, y, w, h, type, offset, ctime)
local(t, dt, dw, lx, ly, cy, steps, dw, xc2, lfo)
global(drawlfo.lfo_modulator, drawlfo.y, gfx_x, gfx_y)
(
  t = offset;
  dw = 2;
  steps = ceil(w / dw);
  dt = 1 / steps;
  
  xc2 = ctime - offset;
  xc2 = xc2 - floor(xc2);
  type == 17 ? ( 
    gfx_measurestr("S&H", lx, ly);
    gfx_x = x + .5 * (w - lx);
    gfx_y = y + .5 * (h - ly);
    gfx_printf("S&H");
    drawlfo.lfo_modulator(type, ctime);
    gfx_circle(x + dw * (xc2 / dt), y + h * (1-drawlfo.y), 2, 1);
  ) : (
    ctime = ctime;
    ctime = ctime - floor(ctime);
    drawlfo.lfo_modulator(type, ctime);
    gfx_circle(x + dw * (xc2 / dt), y + h * (1-drawlfo.y), 2, 1);
    
    lx = x;
    drawlfo.lfo_modulator(type, offset);
    ly = y + h * (1-drawlfo.y);
    loop(steps + 1,
      drawlfo.lfo_modulator(type, t);
      cy = y + h * (1-drawlfo.y);
      gfx_line(lx, ly, x, cy, 1);
      gfx_line(lx, ly+1, x, cy+1, 1);
      lx = x;
      ly = cy;
      t += dt;
      x += dw;
    );
  );
);
