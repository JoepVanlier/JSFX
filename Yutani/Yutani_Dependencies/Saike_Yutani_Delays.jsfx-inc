@init
function initBuffer(buffer_in, buffer_max_in)
  local()
  global()
  instance(write_ptr, buffer_max, buffer)
  (
    buffer      = buffer_in;
    buffer_max  = buffer_max_in;
    
    write_ptr < buffer ? (
      write_ptr = buffer 
    ) : ( write_ptr > buffer_max ) ? write_ptr = buffer
  );
  
function resetBuffer()
  local()
  global()
  instance(buffer_max, buffer)
  (
    memset(buffer, 0, buffer_max - buffer + 1);
  );
  
function writeBuffer(sample)
  local()
  global()
  instance(write_ptr, buffer, buffer_max)
  (
    write_ptr[] = sample;
    write_ptr += 1;
    write_ptr > buffer_max ? write_ptr = buffer;
  );
  
function readBuffer(offset)
  local(id0, id1, id2, id3, ism1, is0, is1, is2, frac)
  global()
  instance(read_ptr, write_ptr, buffer, buffer_max)
  (
    read_ptr = write_ptr - offset - 3;
    
    frac = read_ptr - floor(read_ptr);
    read_ptr = floor(read_ptr);
    read_ptr < buffer ? read_ptr += (buffer_max - buffer + 1);    
  
    ism1 = read_ptr[];
    read_ptr += 1; read_ptr > buffer_max ? read_ptr = buffer;
    is0 = read_ptr[];
    read_ptr += 1; read_ptr > buffer_max ? read_ptr = buffer;
    is1 = read_ptr[];
    read_ptr += 1; read_ptr > buffer_max ? read_ptr = buffer;    
    is2 = read_ptr[];
    
    id0 = is0;
    id1 = 0.5*(is1 - ism1);
    id2 = ism1 - 2.5*is0 + 2*is1 - 0.5*is2;
    id3 = 0.5*(is2 - ism1) + 1.5 * (is0 - is1);
    ((id3*frac+id2)*frac+id1)*frac+id0;
  );
  
  
function readBuffer_cheapo(offset)
  local(id0, id1, id2, id3, ism1, is0, is1, is2, frac)
  global()
  instance(read_ptr, write_ptr, buffer, buffer_max)
  (
    read_ptr = write_ptr - offset - 1;
    
    frac = read_ptr - floor(read_ptr);
    read_ptr = floor(read_ptr);
    read_ptr < buffer ? read_ptr += (buffer_max - buffer + 1);    
  
    ism1 = read_ptr[];
    read_ptr += 1; read_ptr > buffer_max ? read_ptr = buffer;
    is0 = read_ptr[];
    
    is0 * frac + ism1 * (1.0-frac)
  );
  
function readBuffer_fixed(offset)
instance(write_ptr, read_ptr, buffer_max, buffer)
  (
    read_ptr = (write_ptr - offset - 1);
    read_ptr < buffer ? read_ptr += (buffer_max - buffer + 1);    
    read_ptr[];
  );
