@init
  // Update calc_times in @sample

  function calc_k(k_time)
  local(time_factor)
  global(srate)
  (
    time_factor = 2302.58509299 / srate;  // 90% point in ms to samples
    time_factor * 0.33 * exp(-4.605170185988092*k_time)
  );

  // Calculate times in ms
  function calc_times(env_rise, env_decay, sustain)
  global(srate)
  local(time_factor, rise_time)
  instance(k_rise, k_decay, env_attack_samples, m_sustain)
  (
    time_factor = 2302.58509299 / srate; // - ln(0.1) * 1000
    
    // Decay time between 3 and 300 ms
    // Strange way to write 1 / (3 * 10^(2*env_decay))
    rise_time = 0.33 * exp(-4.605170185988092*env_rise);
    k_rise = time_factor * rise_time;
    k_decay = time_factor * 0.033 * exp(-4.605170185988092*env_decay);
    
    env_attack_samples = .001 * srate / rise_time;
    m_sustain = sustain;
  );

  function reset_envelope(reset)
  instance(tEnvelope, env)
  local()
  global()
  (
    tEnvelope = 0;
    reset ? env = 0;
  );
  
  function update_envelope(holding)
  instance(k_rise, k_decay, env_attack_samples, tEnvelope, env, m_sustain)
  global()
  local()
  (
    tEnvelope < env_attack_samples ? (
      env += k_rise * (1.0 - env);
      tEnvelope += 1;
    ) : (
      env += k_decay * (holding * m_sustain - env);
    );
    
    env
  );
  
  function envelopeTempo(cTime)
    instance(cRate, tempoLabel)
    local()
    global(tempo)
    (
    ( cTime < 0.0416667 ) ?
    (
      tempoLabel = "1/16";
      cRate = 0.0625;
    ) : ( cTime < 0.0833333 ) ?
    (
      tempoLabel = "1/12";
      cRate = 0.0833333;
    ) : ( cTime < 0.125 ) ?
    (
      tempoLabel = "1/8";
      cRate = 0.125;
    ) : ( cTime < 0.166667 ) ?
    (
      tempoLabel = "1/6";
      cRate = 0.166667;
    ) : ( cTime < 0.208333 ) ?
    (
      tempoLabel = "1/5";
      cRate = 0.2;
    ) : ( cTime < 0.25 ) ?
    (
      tempoLabel = "1/4";
      cRate = 0.25;
    ) : ( cTime < 0.291667 ) ?
    (
      tempoLabel = "1/3";
      cRate = 0.333333;
    ) : ( cTime < 0.333333 ) ?
    (
      tempoLabel = "1/2";
      cRate = 0.5;
    ) : ( cTime < 0.375 ) ?
    (
      tempoLabel = "1";
      cRate = 1;
    ) : ( cTime < 0.416667 ) ?
    (
      tempoLabel = "2";
      cRate = 2;
    ) : ( cTime < 0.458333 ) ?
    (
      tempoLabel = "3";
      cRate = 3;
    ) : ( cTime < 0.5 ) ?
    (
      tempoLabel = "4";
      cRate = 4;
    ) : ( cTime < 0.541667 ) ?
    (
      tempoLabel = "6";
      cRate = 6;
    ) : ( cTime < 0.583333 ) ?
    (
      tempoLabel = "7";
      cRate = 7;
    ) : ( cTime < 0.625 ) ?
    (
      tempoLabel = "8";
      cRate = 8;
    ) : ( cTime < 0.666667 ) ?
    (
      tempoLabel = "12";
      cRate = 12;
    ) : ( cTime < 0.708333 ) ?
    (
      tempoLabel = "16";
      cRate = 16;
    ) : ( cTime < 0.75 ) ?
    (
      tempoLabel = "24";
      cRate = 24;
    ) : ( cTime < 0.791667 ) ?
    (
      tempoLabel = "32";
      cRate = 32;
    ) : ( cTime < 0.833333 ) ?
    (
      tempoLabel = "64";
      cRate = 64;
    ) : ( cTime < 0.875 ) ?
    (
      tempoLabel = "128";
      cRate = 128;
    ) : ( cTime < 0.916667 ) ?
    (
      tempoLabel = "256";
      cRate = 256;
    ) : ( cTime < 0.958333 ) ?
    (
      tempoLabel = "512";
      cRate = 512;
    ) : ( 
      tempoLabel = "1024";
      cRate = 1024;
    );
    
    cRate = 60 / tempo / cRate;
  );  
