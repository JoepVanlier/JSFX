@init
function init_linearSVF(freq, res)
  global()
  local()
  instance(f0, ic1eq, ic2eq, g, k, a1, a2, a3)
  (
    f0 = exp( (1-freq) * log(20/22050) );
    f0 = min(f0, 1.0);
    g = tan(.5 * $pi * f0);
    k = 2 - 2*res;
        
    a1 = 1/(1+g*(g+k));
    a2 = g*a1;
    a3 = g*a2;
  );

function init_linearSVF_invq(raw_freq, invq)
global(israte, hsrate)
local()
instance(ic1eq, ic2eq, g, k, a1, a2, a3)
(
  raw_freq = min(raw_freq, hsrate);
  g = tan($pi * raw_freq * israte);
  k = invq;
      
  a1 = 1/(1+g*(g+k));
  a2 = g*a1;
  a3 = g*a2;
);


function init_linearSVF_bell(raw_freq, invq, gain_factor)
  global(israte, hsrate)
  local()
  instance(ic1eq, ic2eq, g, k, a1, a2, a3, m1)
  (
    raw_freq = min(raw_freq, hsrate);
    g = tan($pi * raw_freq * israte);
    k = invq / gain_factor;
        
    a1 = 1/(1+g*(g+k));
    a2 = g*a1;
    a3 = g*a2;
    
    m1 = k * (sqr(gain_factor) - 1.0);
  );


function eval_linearSVF_bell(v0)
  global()
  local(v1, v2, v3)
  instance(ic1eq, ic2eq, k, a1, a2, a3, m1)
  (
    v3 = v0 - ic2eq;
    v1 = a1 * ic1eq + a2 * v3;
    v2 = ic2eq + a2 * ic1eq + a3*v3;
    ic1eq = 2*v1 - ic1eq;
    ic2eq = 2*v2 - ic2eq;    
    
    v0 + m1 * v1
  );


function init_linear1p(freq)
global(israte)
instance(g, coeff)
(
  g = tan($pi*freq * israte);
  coeff = g/(1 + g);
);


function eval_linear1p_LP(x)
instance(s, x, y, coeff)
global(v)
(
  v = coeff * (x - s);
  y = v + s;
  s = y + v;
  y;
);


function eval_linear1p_HP(x)
instance(s, x, y, coeff)
global(v)
(
  v = coeff * (x - s);
  y = v + s;
  s = y + v;
  x - y;
);


function eval_linearSVF_LP(v0)
  global()
  local(v1, v2, v3)
  instance(ic1eq, ic2eq, a1, a2, a3)
  (
    v3 = v0 - ic2eq;
    v1 = a1 * ic1eq + a2 * v3;
    v2 = ic2eq + a2 * ic1eq + a3*v3;
    ic1eq = 2*v1 - ic1eq;
    ic2eq = 2*v2 - ic2eq;    
    
    v2
  );
  
function eval_linearSVF_AP(v0)
  global()
  local(v1, v2, v3)
  instance(ic1eq, ic2eq, k, a1, a2, a3)
  (
    v3 = v0 - ic2eq;
    v1 = a1 * ic1eq + a2 * v3;
    v2 = ic2eq + a2 * ic1eq + a3*v3;
    ic1eq = 2*v1 - ic1eq;
    ic2eq = 2*v2 - ic2eq;    
    
    v0 - 2 * k * v1
  );
  
function eval_linearSVF_HP(v0)
  global()
  local(v1, v2, v3)
  instance(ic1eq, ic2eq, k, a1, a2, a3)
  (
    v3 = v0 - ic2eq;
    v1 = a1 * ic1eq + a2 * v3;
    v2 = ic2eq + a2 * ic1eq + a3*v3;
    ic1eq = 2*v1 - ic1eq;
    ic2eq = 2*v2 - ic2eq;    
    
    v0 - k*v1 - v2
  );
  
function eval_linearSVF_LPHP(v0, lphp)
  global()
  local(v1, v2, v3)
  instance(ic1eq, ic2eq, a1, a2, a3, k)
  (
    v3 = v0 - ic2eq;
    v1 = a1 * ic1eq + a2 * v3;
    v2 = ic2eq + a2 * ic1eq + a3*v3;
    ic1eq = 2*v1 - ic1eq;
    ic2eq = 2*v2 - ic2eq;    
    
    v2 * (1.0 - lphp) - lphp * (v0 - k*v1 - v2)
  );
  
function eval_linearSVF_BP(v0)
  global()
  local(v1, v2, v3)
  instance(ic1eq, ic2eq, k, a1, a2, a3)
  (
    v3 = v0 - ic2eq;
    v1 = a1 * ic1eq + a2 * v3;
    v2 = ic2eq + a2 * ic1eq + a3*v3;
    ic1eq = 2*v1 - ic1eq;
    ic2eq = 2*v2 - ic2eq;    
    
    v1
  );
  
function set_bell(frequency, q, gain)
local(A, frequency)
instance(g, k, a1, a2, a3, m0, m1)
global(srate)
(
  a = pow(10, gain / 40);
  g = tan($pi * frequency / srate);
  k = 1.0 / (q * a);
  
  a1 = 1.0 / (1.0 + g * (g + k));
  a2 = g * a1;
  a3 = g * a2;
  m1 = k * (a * a - 1.0);
);

function bell_tick(v0)
local(v1, v2, v3)
instance(ic1eq, ic2eq, a1, a2, a3, m0, m1)
global()
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3 * v3;
  ic1eq = 2.0 * v1 - ic1eq;
  ic2eq = 2.0 * v2 - ic2eq;
  
  v0 + m1 * v1;
);

