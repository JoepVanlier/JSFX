@init
function reset_font()
(
  gfx_setfont(1, "Verdana", 18 * gfx_w / 600);
);

function hinter.sethint(label)
instance(hint_time, hint_label, was_over)
global(delta_time)
(
  hint_label = label;
  hint_time += delta_time;
  was_over = 1;
);

function hinter.drawhint()
instance(hint_time, hint_label, was_over)
global(gfx_x, gfx_y, gfx_w, gfx_h, mouse_x, mouse_y)
local(w, h)
(
  !was_over ? hint_time = 0;
  was_over = 0;

  ( hint_time > 0.75 ) ? (
    gfx_setfont(7, "Arial", 12 * max(1, (gfx_w / 540)));
    gfx_measurestr(hint_label, w, h);
      
    gfx_x = mouse_x+15;
    gfx_y = mouse_y+15;
    ( gfx_x > 0.5*gfx_w ) ? gfx_x = mouse_x - w - 8;
    ( gfx_y > 0.5*gfx_h ) ? gfx_y = mouse_y - h - 8;

    gfx_set( 0.05, 0.05, 0.1, .8 );
    gfx_rect(gfx_x-2, gfx_y-2, w+4, h+4);
    gfx_set( .7, .7, .7, 1 );      
    gfx_printf(hint_label);
  );
  reset_font();
);

function init_knob(_minimum, _maximum, _default, _slider_idx)
instance(minimum, maximum, default, slider_idx)
global()
(
  minimum = _minimum;
  maximum = _maximum;
  default = _default;
  slider_idx = _slider_idx;
);

function draw_knob(x, y, r, label, hint, fancy, enabled)
instance(minimum, maximum, default, slider_idx, lx, ly, last_click)
local(dx, dy, rr, relative_position, ang, over, irange, speed, new_value, cc)
global(gfx_x, gfx_y, captured, last_cap, gfx_a, mouse_cap, mouse_x, mouse_y, mouse_wheel, last_mouse_y, dbl_click_speed, hinter.sethint)
(
  dx = mouse_x - x;
  dy = mouse_y - y;
  over = dx * dx + dy * dy < r * r;
  x = floor(x);
  y = floor(y);
  
  cc = 1;
  gfx_set(0, 0, 0, .4);
  gfx_circle(x, y, r, 1);
  loop(11,
    blackbody(585 * pow(cc - cc*cc, 2.5)); gfx_a = 0.85;
    gfx_circle(x, y, r * (0.98 + 0.12 * cc), 0);
    cc -= 0.05;
  );
  
  irange = 1.0 / (maximum - minimum);
  relative_position = (slider(slider_idx) - minimum) * irange;
  ang = 0.75 + 1.5 * relative_position;
  
  fancy ? (
    cc = 6;
    loop(18,
      blackbody(30 * (cc - 0.15 * cc * cc)); gfx_a = 0.65;
      gfx_arc(x, y, ceil(r * (1.05 + 0.02 * cc)), 1.25 * $pi, (ang + 0.5) * $pi, ang, 1);
      cc *= 0.95;
    );
  );

  gfx_set(0, 0, 0, 0.2);
  gfx_circle(x, y, r+1, 0);
  gfx_set(0, 0, 0, 0.05);
  gfx_circle(x, y, 0.82 * r, 0);
  gfx_circle(x, y, 0.82 * r + 1, 0);
  
  ang = 0.75 + 1.5 * relative_position;  
  cc = 15;
  blackbody(cc);
  gfx_circle(x + 0.7 * r * cos($pi * ang), y + 0.7 * r * sin($pi * ang), 0.004 * r * cc, 1);
 
  over ? (
    (abs(mouse_wheel) > 0) ? (
      speed = 0.0002;
      (mouse_cap & 4 > 0) ? speed *= 0.5;
      (mouse_cap & 8 > 0) ? speed *= 0.25;
      new_value = min(max(slider(slider_idx) + speed * mouse_wheel * (maximum - minimum), minimum), maximum);
      slider_automate(slider(slider_idx) = new_value);
      mouse_wheel = 0;
    );
  );

  (mouse_cap & 1) ? (
    (last_cap & 1 == 0) ? (
      over ? (
        ((time_precise() - last_click) < dbl_click_speed) ? (
          slider_automate(slider(slider_idx) = default);
        ) : (
          last_click = time_precise();
          captured = slider_idx;      
        );
      );
    ) : ( captured == slider_idx ) ? (
      speed = 0.004;
      (mouse_cap & 4 > 0) ? speed *= 0.25;
      (mouse_cap & 8 > 0) ? speed *= 0.025;
      dy = ly - mouse_y;
      new_value = min(max(slider(slider_idx) + speed * dy * (maximum - minimum), minimum), maximum);
      slider_automate(slider(slider_idx) = new_value);
    );
  ) : (
    over ? hinter.sethint(hint);
  );
  
  ly = mouse_y;
  
  over
);

