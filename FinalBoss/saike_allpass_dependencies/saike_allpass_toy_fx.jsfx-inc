@init
function polynomial_aa_sq(t, dt)
(
  // 0 <= t < 1
  (t < dt) ?
  (
    t /= dt;
    t+t - sqr(t) - 1.0
  ) : (t > 1.0 - dt) ? (
    t = (t - 1.0) / dt;
    sqr(t) + t+t + 1.0
  );
);


function saw(t, dt)
local(phase, y)
global()
instance()
(
  phase = t - floor(t);
  y = 2.0 * phase - 1.0;
  y - polynomial_aa_sq(phase, dt)
);

function sq(t, dt, duty)
local(phase, y)
global()
instance()
(
  phase = t - floor(t);
  y = 2.0 * (phase >duty) - 1.0;
  y - polynomial_aa_sq(phase, dt) + polynomial_aa_sq(phase + (1.0 - duty) - floor(phase + (1.0 - duty)), dt)
);

function reset_linearSVF()
global()
local()
instance(ic1eq, ic2eq, k, a1, a2, a3)
(
  ic1eq = ic2eq = 0;  
);

function f_trafo(freq)
local()
global(norm_freq_max)
instance()
(
  norm_freq_max * exp( (1-freq) * log(20/22050) ) * $pi;
);

function init_linearSVF(freq, res)
global()
local(ct, st, stct, div, omega)
instance(ic1eq, ic2eq, k, a1, a2, a3)
(
  omega = .5 * f_trafo(freq);
  k = 2 - 2*res;
  
  ct = cos(omega);
  st = sin(omega);
  
  stct = st * ct;
  div = 1.0 / (1.0 + k * stct);
  a1 = ct * ct * div;
  a2 = stct * div;
  a3 = st * st * div;
);

function eval_linearSVF_LP(v0)
global()
local(v1, v2, v3)
instance(ic1eq, ic2eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;    
  
  v2
);

function eval_linearSVF2_LP(v0)
global()
local(v1, v2, v3)
instance(ic1eq, ic2eq, ic3eq, ic4eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;    
  
  v3 = v2 - ic4eq;
  v1 = a1 * ic3eq + a2 * v3;
  v2 = ic4eq + a2 * ic3eq + a3*v3;
  ic3eq = 2*v1 - ic3eq;
  ic4eq = 2*v2 - ic4eq;
  
  v2
);

function eval_linearSVF2_HP(v0)
global()
local(u, v1, v2, v3)
instance(ic1eq, ic2eq, ic3eq, ic4eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;    
  
  u = v0 - k*v1 - v2;
  v3 = u - ic4eq;
  v1 = a1 * ic3eq + a2 * v3;
  v2 = ic4eq + a2 * ic3eq + a3*v3;
  ic3eq = 2*v1 - ic3eq;
  ic4eq = 2*v2 - ic4eq;
  
  u - k*v1 - v2
);


function eval_linearSVF_BP(v0)
global()
local(v1, v2, v3)
instance(ic1eq, ic2eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;    
  
  v1
);  
  
function eval_linearSVF_HP(v0)
global()
local(v1, v2, v3)
instance(ic1eq, ic2eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;
  
  v0 - k*v1 - v2
);

function eval_linearSVF_AP(v0)
global()
local(v1, v2, v3)
instance(ic1eq, ic2eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;    
  
  v0 - k*v1 + v2
);

function eval_linearSVF2_AP(v0)
global()
local(v1, v2, v3)
instance(ic1eq, ic2eq, ic3eq, ic4eq, k, a1, a2, a3)
(
  v3 = v0 - ic2eq;
  v1 = a1 * ic1eq + a2 * v3;
  v2 = ic2eq + a2 * ic1eq + a3*v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;    
  
  v3 = (v0 - k*v1 + v2) - ic4eq;
  v1 = a1 * ic3eq + a2 * v3;
  v2 = ic4eq + a2 * ic3eq + a3*v3;
  ic3eq = 2*v1 - ic3eq;
  ic4eq = 2*v2 - ic4eq;    
  
  v0 - k*v1 + v2
);

freq_max = 22050;
norm_freq_max = freq_max / srate;
norm_freq_min = 20.0 / freq_max;

function init_LR2_scaled(freq)
global(srate, norm_freq_max, norm_freq_min, freq_max)
local(omega, res, ct, st, div)
instance(k, a1, a2, a3)
(
  omega = norm_freq_max * $pi * exp( (1.0 - freq) * log(norm_freq_min) );
  k = sqrt(2); /* Note the different peak resonance because we're combining 2 SVFs into the Linkwitz-Riley structure */

  ct = cos(omega);
  st = sin(omega);
  div = 1.0 / (1.0 + k * st * ct);
  a1 = ct * ct * div;
  a2 = st * ct * div;
  a3 = st * st * div;
);

function init_LR2(freq)
global(srate, norm_freq_max, norm_freq_min, freq_max)
local(omega, res, ct, st, div)
instance(k, a1, a2, a3)
(
  omega = $pi * freq / srate;
  k = sqrt(2); /* Note the different peak resonance because we're combining 2 SVFs into the Linkwitz-Riley structure */

  ct = cos(omega);
  st = sin(omega);
  div = 1.0 / (1.0 + k * st * ct);
  a1 = ct * ct * div;
  a2 = st * ct * div;
  a3 = st * st * div;
);

function eval_LRLP(v0)
global()
local(v1, v2, v3)
instance(ic3eq, ic4eq, k, a1, a2, a3)
(
 v3 = v0 - ic4eq;
 v1 = a1 * ic3eq + a2 * v3;
 v2 = ic4eq + a2 * ic3eq + a3 * v3;
 ic3eq = 2*v1 - ic3eq;
 ic4eq = 2*v2 - ic4eq;
 
 v2
);

function eval_LR2(v0)
global()
local(v1, v2, v3, all)
instance(ic1eq, ic2eq, k, a1, a2, a3, hp, lp)
(
 v3 = v0 - ic2eq;
 v1 = a1 * ic1eq + a2 * v3;
 v2 = ic2eq + a2 * ic1eq + a3 * v3;
 ic1eq = 2*v1 - ic1eq;
 ic2eq = 2*v2 - ic2eq;    
 
 all = v0 - 2 * k * v1;

 lp = this.eval_LRLP(v2); 
 hp = all - lp;
);

function eval_LRAP(v0)
global()
local(v1, v2, v3)
instance(ic5eq, ic6eq, k, a1, a2, a3)
(
 v3 = v0 - ic6eq;
 v1 = a1 * ic5eq + a2 * v3;
 v2 = ic6eq + a2 * ic5eq + a3 * v3;
 ic5eq = 2*v1 - ic5eq;
 ic6eq = 2*v2 - ic6eq;    
 
 v0 - 2*k*v1
);

function bandsplitter_init(freq1, freq2, freq3)
instance(
  LF1, LF2, LF3, LA_F2, LA_F3, LA_F3_2,
  RF1, RF2, RF3, RA_F2, RA_F3, RA_F3_2,
)
global()
local()
(
  LF1.init_LR2(freq1);
  RF1.k  = LF1.k;
  RF1.a1 = LF1.a1;
  RF1.a2 = LF1.a2;
  RF1.a3 = LF1.a3;
  LF2.init_LR2(freq2);
  RF2.k  = LF2.k;
  RF2.a1 = LF2.a1;
  RF2.a2 = LF2.a2;
  RF2.a3 = LF2.a3;
  LF3.init_LR2(freq3);
  RF3.k  = LF3.k;
  RF3.a1 = LF3.a1;
  RF3.a2 = LF3.a2;
  RF3.a3 = LF3.a3;
  
  // All-passes for maintaining the phase relation between the bands
  LA_F2.init_LR2(freq2);
  LA_F3.init_LR2(freq3);
  
  RA_F3.k   = RA_F3_2.k  = LA_F3_2.k  = LA_F3.k;
  RA_F3.a1  = RA_F3_2.a1 = LA_F3_2.a1 = LA_F3.a1;
  RA_F3.a2  = RA_F3_2.a2 = LA_F3_2.a2 = LA_F3.a2;
  RA_F3.a3  = RA_F3_2.a3 = LA_F3_2.a3 = LA_F3.a3;
  
  RA_F2.k  = LA_F2.k;
  RA_F2.a1 = LA_F2.a1;
  RA_F2.a2 = LA_F2.a2;
  RA_F2.a3 = LA_F2.a3;
);

function bandsplitter_eval(sl, sr)
instance(
  LF1, LF2, LF3, LA_F2, LA_F3, LA_F3_2,
  RF1, RF2, RF3, RA_F2, RA_F3, RA_F3_2,
  b1, b2, b3, b4,
)
local()
global()
(
  LF1.eval_LR2(sl);
  b1.inL   = LA_F3.eval_LRAP(LA_F2.eval_LRAP(LF1.lp));
  
  LF2.eval_LR2(LF1.hp);
  b2.inL   = LA_F3_2.eval_LRAP(LF2.lp);
    
  LF3.eval_LR2(LF2.hp);
  b3.inL   = LF3.lp;
  b4.inL   = LF3.hp;
    
  RF1.eval_LR2(sr);
  b1.inR   = RA_F3.eval_LRAP(RA_F2.eval_LRAP(RF1.lp));
  
  RF2.eval_LR2(RF1.hp);
  b2.inR   = RA_F3_2.eval_LRAP(RF2.lp);
  
  RF3.eval_LR2(RF2.hp);
  b3.inR   = RF3.lp;
  b4.inR   = RF3.hp;
);

/* Gain computer */
function calcGain(xG)
  instance(thresh, ratio, iratio)
  local(diff, tmp)
  global(bidi)
  (
    diff = xG - thresh;
    
    ( xG < thresh ) ? (
      thresh + diff * iratio
    ) : (
      xG - diff * iratio * bidi
    );
  );

function setCompressorOptions(thr, rat, s_atk, s_rel, min_attack, max_attack, min_decay, max_decay)
instance(rt, at, thresh, ratio, iratio, attack, release)
global(srate)
local(csrate, alpha, beta, atk)
(
  beta          = log(min_attack);
  alpha         = log(max_attack)-beta;
  attack        = exp(alpha * s_atk + beta) - 1;
  beta          = log(min_decay);
  alpha         = log(max_decay)-beta;
  release       = exp(alpha * s_rel + beta);

  csrate        = srate;
  thresh        = thr;
  ratio         = exp(rat*rat);
  iratio        = 1/ratio;
  at            = exp(-1/(.5*.001*attack*csrate));
  rt            = exp(-1/(.5*.001*release*csrate));
);

function setCompOptions(thresh, ratio, release)
local()
global()
instance(
  comp1, comp2, comp3, comp4
)
(
  comp1.setCompressorOptions(thresh, ratio, 0, release, 0, 120, 5, 400);
  comp2.setCompressorOptions(thresh, ratio, 0, release, 0, 120, 5, 400);
  comp3.setCompressorOptions(thresh, ratio, 0, release, 0, 120, 5, 400);
  comp4.setCompressorOptions(thresh, ratio, 0, release, 0, 120, 5, 400);
);

// Topology 3:
/* Level detection log domain */
function compressor_gain(x)
instance( rt, at, yL, 
          ya, outGain )
global(eps)
local(xL, yG, xG)
(
  xG  = 20 * log10(abs(x) + eps); /* Peak */
 
  /* Calculate the gain curve */
  yG = this.calcGain(xG);
  xL  = xG - yG;
 
  // Update smooth peak detector (peak)
  xL > yL ? (
    yL = at * yL + (1.0-at) * xL;
  ) : (
    ya = max( xL, rt * ya + (1.0-rt) * xL );
    yL = at * yL + (1.0-at) * ya;
  );
 
  // Return gain correction
  yL
);

function processBands()
local()
global()
instance(
  b1, b2, b3, b4,
  F1, F2, F3, F4,
  lg1, lg2, lg3, lg4,
  comp1.compressor_gain,
  comp2.compressor_gain,
  comp3.compressor_gain,
  comp4.compressor_gain,
  state1, state2, state3, state4,
)
(
  b1.l = b2.l = b3.l = b4.l = 0;
  b1.r = b2.r = b3.r = b4.r = 0;
  
  state1 = comp1.compressor_gain(max(abs(b1.inL), abs(b1.inR)));
  lg1 = exp(-0.11512925464970228420089957273422 * state1);
  b1.l = lg1 * b1.inL;
  b1.r = lg1 * b1.inR;
  
  state2 = comp2.compressor_gain(max(abs(b2.inL), abs(b2.inR)));
  lg2 = exp(-0.11512925464970228420089957273422 * state2);
  b2.l = lg2 * b2.inL;
  b2.r = lg2 * b2.inR;
  
  state3 = comp3.compressor_gain(max(abs(b3.inL), abs(b3.inR)));
  lg3 = exp(-0.11512925464970228420089957273422 * state3);
  b3.l = lg3 * b3.inL;
  b3.r = lg3 * b3.inR;
  
  state4 = comp4.compressor_gain(max(abs(b4.inL), abs(b4.inR)));
  lg4 = exp(-0.11512925464970228420089957273422 * state4);
  b4.l = lg4 * b4.inL;
  b4.r = lg4 * b4.inR;
);

function kot_lut(xloc, yloc)
instance()
local(ptr)
global()
(
  ptr = xloc;
  (ptr)[] = 0.0000000000000000000000000000000000000000000000000000000000000000000000;
  (ptr+=1)[] = 0.0000002272750297187890897817106163406042362851167126791551709175109863;
  (ptr+=1)[] = 0.0000004545523573290177498923273543413037245386476570274680852890014648;
  (ptr+=1)[] = 0.0000006818365740679524598656354242298682777345675276592373847961425781;
  (ptr+=1)[] = 0.0000009091391466737206086479107687570166973500818130560219287872314453;
  (ptr+=1)[] = 0.0000011364898614403173784817655672663150312473590020090341567993164062;
  (ptr+=1)[] = 0.0000013639665515893442292920476749396030413663538638502359390258789062;
  (ptr+=1)[] = 0.0000015917727765245184593455828048202960189883015118539333343505859375;
  (ptr+=1)[] = 0.0000018204409785609454137613903365600087624898151261731982231140136719;
  (ptr+=1)[] = 0.0000020513638719805324137448500343428037240300909616053104400634765625;
  (ptr+=1)[] = 0.0000022881844022928005752545114331875097946067398879677057266235351562;
  (ptr+=1)[] = 0.0000023369165300198341795830971057146285829730913974344730377197265625;
  (ptr+=1)[] = 0.0000023863436474180246963706659296677869974701025057584047317504882812;
  (ptr+=1)[] = 0.0000024366131224582609724751362106909269300558662507683038711547851562;
  (ptr+=1)[] = 0.0000024879035715163015945897238140327445421462471131235361099243164062;
  (ptr+=1)[] = 0.0000025404314853906905902029833566047045678715221583843231201171875000;
  (ptr+=1)[] = 0.0000025944592603240052647252302658875677821015415247529745101928710938;
  (ptr+=1)[] = 0.0000026503049319491250363943143919520650797494454309344291687011718750;
  (ptr+=1)[] = 0.0000027083539732545147541483560038599875952058937400579452514648437500;
  (ptr+=1)[] = 0.0000027690735942301342131213661573729822862333094235509634017944335938;
  (ptr+=1)[] = 0.0000028330300736588281070612964362975816356993163935840129852294921875;
  (ptr+=1)[] = 0.0000028664312687454564579359050924267648952081799507141113281250000000;
  (ptr+=1)[] = 0.0000029009097659996159753012685833528649936852161772549152374267578125;
  (ptr+=1)[] = 0.0000029365742958318774165327701142214067431268631480634212493896484375;
  (ptr+=1)[] = 0.0000029735445626418528360600766757837476461645564995706081390380859375;
  (ptr+=1)[] = 0.0000030119523524056179028356161619939257434452883899211883544921875000;
  (ptr+=1)[] = 0.0000030519427520501930822414624056015952646703226491808891296386718750;
  (ptr+=1)[] = 0.0000030936754918975680455760658010833097364411514718085527420043945312;
  (ptr+=1)[] = 0.0000031373264235994869768590562197907445352029753848910331726074218750;
  (ptr+=1)[] = 0.0000031830891472378593251113358675308262490943889133632183074951171875;
  (ptr+=1)[] = 0.0000032311768026458596567206203037381229137281479779630899429321289062;
  (ptr+=1)[] = 0.0000032818240415242349736159224032894243805458245333284139633178710938;
  (ptr+=1)[] = 0.0000033352891986002126872086666342642757854264345951378345489501953125;
  (ptr+=1)[] = 0.0000033918566819180485770327329597684240525268251076340675354003906250;
  (ptr+=1)[] = 0.0000034518396043778417216045528714829515593010000884532928466796875000;
  (ptr+=1)[] = 0.0000035155826808714051744846409985889579274953575804829597473144531250;
  (ptr+=1)[] = 0.0000035834654178215151178405264986714939823286840692162513732910156250;
  (ptr+=1)[] = 0.0000036559056246363073292308595862998288339440478011965751647949218750;
  (ptr+=1)[] = 0.0000037333632795692510365683641770928602454659994691610336303710937500;
  (ptr+=1)[] = 0.0000038163447857542747194297717838740169327138573862612247467041015625;
  (ptr+=1)[] = 0.0000039054076567958125965149968061851382117311004549264907836914062500;
  (ptr+=1)[] = 0.0000040011656752680690022944305639374107386174728162586688995361328125;
  (ptr+=1)[] = 0.0000041042945718534878992030633104715064973788685165345668792724609375;
  (ptr+=1)[] = 0.0000042155382776677333941982642184775897931103827431797981262207031250;
  (ptr+=1)[] = 0.0000043357158076219526877362504813095966937908087857067584991455078125;
  (ptr+=1)[] = 0.0000044657288385119806739141298801420987274468643590807914733886718750;
  (ptr+=1)[] = 0.0000046065700519521183580102553778434781861506053246557712554931640625;
  (ptr+=1)[] = 0.0000047593323193481105662502525510682005460694199427962303161621093750;
  (ptr+=1)[] = 0.0000049252188138949295193838757989102106193968211300671100616455078125;
  (ptr+=1)[] = 0.0000051055541431626049890578691869968963601422728970646858215332031250;
  (ptr+=1)[] = 0.0000053017966052763776071184848026618396943376865237951278686523437500;
  (ptr+=1)[] = 0.0000055155516820938343426888178511191540565050672739744186401367187500;
  (ptr+=1)[] = 0.0000057485868942271102884555497580798544277058681473135948181152343750;
  (ptr+=1)[] = 0.0000060028481553591214552306060125985709419182967394590377807617187500;
  (ptr+=1)[] = 0.0000062804777771751482123440031568595287581047159619629383087158203125;
  (ptr+=1)[] = 0.0000065838342915038130284243605983007796567108016461133956909179687500;
  (ptr+=1)[] = 0.0000069155142730754847230794681023358094762443215586245059967041015625;
  (ptr+=1)[] = 0.0000072783763648173485470834961907904414601944154128432273864746093750;
  (ptr+=1)[] = 0.0000076755677279836502242393175832191332119691651314496994018554687500;
  (ptr+=1)[] = 0.0000081105531618558816169331504575268354528816416859626770019531250000;
  (ptr+=1)[] = 0.0000085871471624484472975457477472716050215240102261304855346679687500;
  (ptr+=1)[] = 0.0000085871471624484659322705873418790645246190251782536506652832031250;
  (ptr+=1)[] = 0.0000090011886777615967647828143505250864109257236123085021972656250000;
  (ptr+=1)[] = 0.0000094468827383713019590731618801981994693051092326641082763671875000;
  (ptr+=1)[] = 0.0000099267602501288379382004406492612247348006349056959152221679687500;
  (ptr+=1)[] = 0.0000104435544875849889250290364328677128469280432909727096557617187500;
  (ptr+=1)[] = 0.0000110002172751887835580771046739556595639442093670368194580078125000;
  (ptr+=1)[] = 0.0000115999364623186860016271909623597480276657734066247940063476562500;
  (ptr+=1)[] = 0.0000122461547955997655871525700566060379514965461567044258117675781250;
  (ptr+=1)[] = 0.0000129425903002325456308315571041234193216951098293066024780273437500;
  (ptr+=1)[] = 0.0000136932582909924210044262660179725799025618471205234527587890625000;
  (ptr+=1)[] = 0.0000145024951432066187767891407567333317274460569024085998535156250000;
  (ptr+=1)[] = 0.0000153749839644346761617296759361295244161738082766532897949218750000;
  (ptr+=1)[] = 0.0000163157823188307988669827619521157657800358720123767852783203125000;
  (ptr+=1)[] = 0.0000173303521683185159844940020912318345835956279188394546508789062500;
  (ptr+=1)[] = 0.0000184245922078317219371113022674535386613570153713226318359375000000;
  (ptr+=1)[] = 0.0000196048727860490104623128471139636985753895714879035949707031250000;
  (ptr+=1)[] = 0.0000208780736183554699401249132861835278163198381662368774414062500000;
  (ptr+=1)[] = 0.0000222516245152946834004979714816130353938206098973751068115234375000;
  (ptr+=1)[] = 0.0000237335493676272404959919082312325144812348298728466033935546875000;
  (ptr+=1)[] = 0.0000253325136483904640662297158559823628820595331490039825439453125000;
  (ptr+=1)[] = 0.0000270578757131753265508748024226193251706718001514673233032226562500;
  (ptr+=1)[] = 0.0000289197422023221323999792736758607247793406713753938674926757812500;
  (ptr+=1)[] = 0.0000309290278730203741408728845829756437524338252842426300048828125000;
  (ptr+=1)[] = 0.0000330975202155234414437730283697902677886304445564746856689453125000;
  (ptr+=1)[] = 0.0000354379492360112522634368881213617896719370037317276000976562500000;
  (ptr+=1)[] = 0.0000379640628192202280832660832299296771452645771205425262451171875000;
  (ptr+=1)[] = 0.0000406907081169949504237046133958699556387728080153465270996093750000;
  (ptr+=1)[] = 0.0000436339194445857010045200508052687382587464526295661926269531250000;
  (ptr+=1)[] = 0.0000468110132050467188662319639735898135768366046249866485595703125000;
  (ptr+=1)[] = 0.0000502406904036941214376603415114885820003109984099864959716796875000;
  (ptr+=1)[] = 0.0000539431473595174259681901685059557394197327084839344024658203125000;
  (ptr+=1)[] = 0.0000579401952689646983869417584678274124598829075694084167480468750000;
  (ptr+=1)[] = 0.0000622553893299282879846695548664570196706335991621017456054687500000;
  (ptr+=1)[] = 0.0000669141681903553774005480314635008198820287361741065979003906250000;
  (ptr+=1)[] = 0.0000719440045470298001305253787762694628327153623104095458984375000000;
  (ptr+=1)[] = 0.0000773745677860820750808973356171804880432318896055221557617187500000;
  (ptr+=1)[] = 0.0000832378996280706091523415857125201000599190592765808105468750000000;
  (ptr+=1)[] = 0.0000895686038174703554048949882826491375453770160675048828125000000000;
  (ptr+=1)[] = 0.0000964040509795407459621083279266429144627181813120841979980468750000;
  (ptr+=1)[] = 0.0001037845998573449021610062836806775976583594456315040588378906250000;
  (ptr+=1)[] = 0.0001117538362386594940267245390508321634115418419241905212402343750000;
  (ptr+=1)[] = 0.0001203588309872411106753870013719165399379562586545944213867187500000;
  (ptr+=1)[] = 0.0001296504187060145015485124186938037382788024842739105224609375000000;
  (ptr+=1)[] = 0.0001396834986818906330571787854921694815857335925102233886718750000000;
  (ptr+=1)[] = 0.0001505173598938311493779934613357340822403784841299057006835937500000;
  (ptr+=1)[] = 0.0001622160320082327274529565563909727643476799130439758300781250000000;
  (ptr+=1)[] = 0.0001748486644395512478247778354045749438228085637092590332031250000000;
  (ptr+=1)[] = 0.0001884899357202318931694962067524556914577260613441467285156250000000;
  (ptr+=1)[] = 0.0002032204956034545657427708986730863216507714241743087768554687500000;
  (ptr+=1)[] = 0.0002191274425159670977917431011761095760448370128870010375976562500000;
  (ptr+=1)[] = 0.0002363048391875718424234159575902936012425925582647323608398437500000;
  (ptr+=1)[] = 0.0002548542695098295431978263625438785311416722834110260009765625000000;
  (ptr+=1)[] = 0.0002748854399206281866156753590502148654195480048656463623046875000000;
  (ptr+=1)[] = 0.0002965168288748602190736669559356641912017948925495147705078125000000;
  (ptr+=1)[] = 0.0003198763882461248906491357857362345384899526834487915039062500000000;
  (ptr+=1)[] = 0.0003451023008118097234672716489001231821021065115928649902343750000000;
  (ptr+=1)[] = 0.0003723437983059212823613859377758217306109145283699035644531250000000;
  (ptr+=1)[] = 0.0004017620448825965067535248564922767400275915861129760742187500000000;
  (ptr+=1)[] = 0.0004335310912204847454132217166034024558030068874359130859375000000000;
  (ptr+=1)[] = 0.0004678389049163486027721470250639868027064949274063110351562500000000;
  (ptr+=1)[] = 0.0005048884832679128784049815692469564964994788169860839843750000000000;
  (ptr+=1)[] = 0.0005448990550337146207202088099563752621179446578025817871093750000000;
  (ptr+=1)[] = 0.0005881073782844700855929054306159287079935893416404724121093750000000;
  (ptr+=1)[] = 0.0006347691420293359717760828253574345581000670790672302246093750000000;
  (ptr+=1)[] = 0.0006851604799148061164873468875669004773953929543495178222656250000000;
  (ptr+=1)[] = 0.0007395796049574564993284164771125688275787979364395141601562500000000;
  (ptr+=1)[] = 0.0007983485749882848975592097851006201381096616387367248535156250000000;
  (ptr+=1)[] = 0.0008618151992602169839119419236794783500954508781433105468750000000000;
  (ptr+=1)[] = 0.0009303550975060245276440640260773307090857997536659240722656250000000;
  (ptr+=1)[] = 0.0010043739236364871997980730000676885538268834352493286132812500000000;
  (ptr+=1)[] = 0.0010843097672432007103071605058630666462704539299011230468750000000000;
  (ptr+=1)[] = 0.0011706357471231657995519581660914809617679566144943237304687500000000;
  (ptr+=1)[] = 0.0012638628121790008475289202038993607857264578342437744140625000000000;
  (ptr+=1)[] = 0.0013645427662763371431248193843543958791997283697128295898437500000000;
  (ptr+=1)[] = 0.0014732715349657825656959353466390894027426838874816894531250000000000;
  (ptr+=1)[] = 0.0015906926934087053417121726539562587277032434940338134765625000000000;
  (ptr+=1)[] = 0.0017175012763924329961540138356212992221117019653320312500000000000000;
  (ptr+=1)[] = 0.0018544478929904625614383251175354416773188859224319458007812500000000;
  (ptr+=1)[] = 0.0020023431702267499750214074794030238990671932697296142578125000000000;
  (ptr+=1)[] = 0.0021620625520510157631381975562590014305897057056427001953125000000000;
  (ptr+=1)[] = 0.0023345514820352487699028909418075272697024047374725341796875000000000;
  (ptr+=1)[] = 0.0025208310004734692071071133767645733314566314220428466796875000000000;
  (ptr+=1)[] = 0.0027220037890199849477113058782151711056940257549285888671875000000000;
  (ptr+=1)[] = 0.0029392606986508688915460396628986927680671215057373046875000000000000;
  (ptr+=1)[] = 0.0031738877995947083893168993995459459256380796432495117187500000000000;
  (ptr+=1)[] = 0.0034272739949687638406905509924627040163613855838775634765625000000000;
  (ptr+=1)[] = 0.0037009192431938535070012896710522909415885806083679199218750000000000;
  (ptr+=1)[] = 0.0039964434378653096793798660257834853837266564369201660156250000000000;
  
  ptr = yloc;
  (ptr)[] = 0.0000000000000000000000000000000000000000000000000000000000000000000000;
  (ptr+=1)[] = 0.0499974111809210614021381502425356302410364151000976562500000000000000;
  (ptr+=1)[] = 0.0999792173768255937327253946023120079189538955688476562500000000000000;
  (ptr+=1)[] = 0.1499298481753241485403549404509249143302440643310546875000000000000000;
  (ptr+=1)[] = 0.1998338172182716476754649193026125431060791015625000000000000000000000;
  (ptr+=1)[] = 0.2496758163419069420640994394489098340272903442382812500000000000000000;
  (ptr+=1)[] = 0.2994409285040193213767167890182463452219963073730468750000000000000000;
  (ptr+=1)[] = 0.3491151514740411521131591143785044550895690917968750000000000000000000;
  (ptr+=1)[] = 0.3986867321580635503686096399178495630621910095214843750000000000000000;
  (ptr+=1)[] = 0.4481496137509251576069857492257142439484596252441406250000000000000000;
  (ptr+=1)[] = 0.4975123872180225448325074921740451827645301818847656250000000000000000;
  (ptr+=1)[] = 0.5073758787107911505387392026023007929325103759765625000000000000000000;
  (ptr+=1)[] = 0.5172376106452808430802292605221737176179885864257812500000000000000000;
  (ptr+=1)[] = 0.5270984116941410668744083523051813244819641113281250000000000000000000;
  (ptr+=1)[] = 0.5369593103710098569436581783520523458719253540039062500000000000000000;
  (ptr+=1)[] = 0.5468215771201838659720806390396319329738616943359375000000000000000000;
  (ptr+=1)[] = 0.5566867752774767863499505438085179775953292846679687500000000000000000;
  (ptr+=1)[] = 0.5665568227708185355950831763038877397775650024414062500000000000000000;
  (ptr+=1)[] = 0.5764340668222130981135364891088102012872695922851562500000000000000000;
  (ptr+=1)[] = 0.5863213743882237372062604663369711488485336303710937500000000000000000;
  (ptr+=1)[] = 0.5962222416513892619960301999526564031839370727539062500000000000000000;
  (ptr+=1)[] = 0.6011790568521447886141118033265229314565658569335937500000000000000000;
  (ptr+=1)[] = 0.6061409265706914073490452210535295307636260986328125000000000000000000;
  (ptr+=1)[] = 0.6111085283863871842058301808719988912343978881835937500000000000000000;
  (ptr+=1)[] = 0.6160826093403891645650105601816903799772262573242187500000000000000000;
  (ptr+=1)[] = 0.6210639929004470038975682655291166156530380249023437500000000000000000;
  (ptr+=1)[] = 0.6260535866233817303694308975536841899156570434570312500000000000000000;
  (ptr+=1)[] = 0.6310523905849797499101327957760076969861984252929687500000000000000000;
  (ptr+=1)[] = 0.6360615066539747619600575490039773285388946533203125000000000000000000;
  (ptr+=1)[] = 0.6410821486944094926840875814377795904874801635742187500000000000000000;
  (ptr+=1)[] = 0.6461156537890432316473265927925240248441696166992187500000000000000000;
  (ptr+=1)[] = 0.6511634945856613621018027515674475580453872680664062500000000000000000;
  (ptr+=1)[] = 0.6562272928782366676614401512779295444488525390625000000000000000000000;
  (ptr+=1)[] = 0.6613088345459712247276229390990920364856719970703125000000000000000000;
  (ptr+=1)[] = 0.6664100859854046321473219904873985797166824340820312500000000000000000;
  (ptr+=1)[] = 0.6715332121841049994870331829588394612073898315429687500000000000000000;
  (ptr+=1)[] = 0.6766805965990945193055949857807718217372894287109375000000000000000000;
  (ptr+=1)[] = 0.6818548630191798576305473034153692424297332763671875000000000000000000;
  (ptr+=1)[] = 0.6870588996079370902592131642450112849473953247070312500000000000000000;
  (ptr+=1)[] = 0.6922958853433357484519206082040909677743911743164062500000000000000000;
  (ptr+=1)[] = 0.6975693190910515761871124595927540212869644165039062500000000000000000;
  (ptr+=1)[] = 0.7028830515715597249126744827663060277700424194335937500000000000000000;
  (ptr+=1)[] = 0.7082413205062993988292419089702889323234558105468750000000000000000000;
  (ptr+=1)[] = 0.7136487892557192846965108401491306722164154052734375000000000000000000;
  (ptr+=1)[] = 0.7191105892920591768913141095254104584455490112304687500000000000000000;
  (ptr+=1)[] = 0.7246323668824904418173105113964993506669998168945312500000000000000000;
  (ptr+=1)[] = 0.7302203343939188684430519060697406530380249023437500000000000000000000;
  (ptr+=1)[] = 0.7358813266695874988343462064221967011690139770507812500000000000000000;
  (ptr+=1)[] = 0.7416228629697880769811035861494019627571105957031250000000000000000000;
  (ptr+=1)[] = 0.7474532150147404907514214755792636424303054809570312500000000000000000;
  (ptr+=1)[] = 0.7533814817172148625701311175362206995487213134765625000000000000000000;
  (ptr+=1)[] = 0.7594176712459478340022656084329355508089065551757812500000000000000000;
  (ptr+=1)[] = 0.7655727911185274958683066870435141026973724365234375000000000000000000;
  (ptr+=1)[] = 0.7718589470842863731192551313142757862806320190429687500000000000000000;
  (ptr+=1)[] = 0.7782894516239639015608986483130138367414474487304687500000000000000000;
  (ptr+=1)[] = 0.7848789429634490666387591772945597767829895019531250000000000000000000;
  (ptr+=1)[] = 0.7916435155737018281030259458930231630802154541015625000000000000000000;
  (ptr+=1)[] = 0.7986008632077307156649226271838415414094924926757812500000000000000000;
  (ptr+=1)[] = 0.8057704356078413399089299673505593091249465942382812500000000000000000;
  (ptr+=1)[] = 0.8131736101015950568537959952664095908403396606445312500000000000000000;
  (ptr+=1)[] = 0.8208338793920220144428867570240981876850128173828125000000000000000000;
  (ptr+=1)[] = 0.8208338793920222364874916820554062724113464355468750000000000000000000;
  (ptr+=1)[] = 0.8271644661145211019359635429282207041978836059570312500000000000000000;
  (ptr+=1)[] = 0.8336904435532230817074150763801299035549163818359375000000000000000000;
  (ptr+=1)[] = 0.8404273115375370251101116991776507347822189331054687500000000000000000;
  (ptr+=1)[] = 0.8473917767812859658249635685933753848075866699218750000000000000000000;
  (ptr+=1)[] = 0.8546018442958019933897162445646245032548904418945312500000000000000000;
  (ptr+=1)[] = 0.8620769152647821398360861167020630091428756713867187500000000000000000;
  (ptr+=1)[] = 0.8698378917483061689708279118349310010671615600585937500000000000000000;
  (ptr+=1)[] = 0.8779072885853479446538472075189929455518722534179687500000000000000000;
  (ptr+=1)[] = 0.8863093528609788940286762226605787873268127441406250000000000000000000;
  (ptr+=1)[] = 0.8950701912948123561974966833076905459165573120117187500000000000000000;
  (ptr+=1)[] = 0.9042179058893267118435232987394556403160095214843750000000000000000000;
  (ptr+=1)[] = 0.9137827381483989430677183918305672705173492431640625000000000000000000;
  (ptr+=1)[] = 0.9237972221350448931431742494169156998395919799804687500000000000000000;
  (ptr+=1)[] = 0.9342963465798540534379412747512105852365493774414062500000000000000000;
  (ptr+=1)[] = 0.9453177261740420833646680875972378998994827270507812500000000000000000;
  (ptr+=1)[] = 0.9569017820787704131646478344919160008430480957031250000000000000000000;
  (ptr+=1)[] = 0.9690919315497310559948118680040352046489715576171875000000000000000000;
  (ptr+=1)[] = 0.9819347864061586106387835570785682648420333862304687500000000000000000;
  (ptr+=1)[] = 0.9954803598581729584537924893083982169628143310546875000000000000000000;
  (ptr+=1)[] = 1.0097822809358110163202582043595612049102783203125000000000000000000000;
  (ptr+=1)[] = 1.0248980154254179186779083465808071196079254150390625000000000000000000;
  (ptr+=1)[] = 1.0408890918001190151187529409071430563926696777343750000000000000000000;
  (ptr+=1)[] = 1.0578213301140302338154697281424887478351593017578125000000000000000000;
  (ptr+=1)[] = 1.0757650711947601696039100716006942093372344970703125000000000000000000;
  (ptr+=1)[] = 1.0947954026921198344979302419233135879039764404296875000000000000000000;
  (ptr+=1)[] = 1.1149923775952734761318652090267278254032135009765625000000000000000000;
  (ptr+=1)[] = 1.1364412196838580282332031856640242040157318115234375000000000000000000;
  (ptr+=1)[] = 1.1592325089941781790514596650609746575355529785156250000000000000000000;
  (ptr+=1)[] = 1.1834623387176239628360008282470516860485076904296875000000000000000000;
  (ptr+=1)[] = 1.2092324329583503672580491183907724916934967041015625000000000000000000;
  (ptr+=1)[] = 1.2366502124099083559372047602664679288864135742187500000000000000000000;
  (ptr+=1)[] = 1.2658287922116928658766710213967598974704742431640625000000000000000000;
  (ptr+=1)[] = 1.2968868929605754658496152842417359352111816406250000000000000000000000;
  (ptr+=1)[] = 1.3299486420285153709386349873966537415981292724609375000000000000000000;
  (ptr+=1)[] = 1.3651432379294943242342696976265870034694671630859375000000000000000000;
  (ptr+=1)[] = 1.4026044454623378676672018627868965268135070800781250000000000000000000;
  (ptr+=1)[] = 1.4424698837334435363999318724381737411022186279296875000000000000000000;
  (ptr+=1)[] = 1.4848800629864284950087949255248531699180603027343750000000000000000000;
  (ptr+=1)[] = 1.5299771195580593730056762069580145180225372314453125000000000000000000;
  (ptr+=1)[] = 1.5779031914700860639300117327366024255752563476562500000000000000000000;
  (ptr+=1)[] = 1.6287983705310296045354334637522697448730468750000000000000000000000000;
  (ptr+=1)[] = 1.6827981609377185012732525137835182249546051025390625000000000000000000;
  (ptr+=1)[] = 1.7400303700759223168859080033143982291221618652343750000000000000000000;
  (ptr+=1)[] = 1.8006113557045633211117774408194236457347869873046875000000000000000000;
  (ptr+=1)[] = 1.8646415565671323744112442000187002122402191162109375000000000000000000;
  (ptr+=1)[] = 1.9322002427930706769387825261219404637813568115234375000000000000000000;
  (ptr+=1)[] = 2.0033394408492455340820015408098697662353515625000000000000000000000000;
  (ptr+=1)[] = 2.0780770184165233693818208848824724555015563964843750000000000000000000;
  (ptr+=1)[] = 2.1563889609469497621319078461965546011924743652343750000000000000000000;
  (ptr+=1)[] = 2.2382009374882709806797720375470817089080810546875000000000000000000000;
  (ptr+=1)[] = 2.3233793419586739048554591136053204536437988281250000000000000000000000;
  (ptr+=1)[] = 2.4117221095406158326568402117118239402770996093750000000000000000000000;
  (ptr+=1)[] = 2.5029497459795853053776681917952373623847961425781250000000000000000000;
  (ptr+=1)[] = 2.5966971661018054540193134016590192914009094238281250000000000000000000;
  (ptr+=1)[] = 2.6925071067624020137998286372749134898185729980468750000000000000000000;
  (ptr+=1)[] = 2.7898260409720516683762525644851848483085632324218750000000000000000000;
  (ptr+=1)[] = 2.8880036473634849158997894846834242343902587890625000000000000000000000;
  (ptr+=1)[] = 2.9862969466416284802789959940128028392791748046875000000000000000000000;
  (ptr+=1)[] = 3.0838801617003297472763279074570164084434509277343750000000000000000000;
  (ptr+=1)[] = 3.1798611471809872242033634393010288476943969726562500000000000000000000;
  (ptr+=1)[] = 3.2733048325503455444618339242879301309585571289062500000000000000000000;
  (ptr+=1)[] = 3.3632635172023128689033910632133483886718750000000000000000000000000000;
  (ptr+=1)[] = 3.4488130696746019943077499192440882325172424316406250000000000000000000;
  (ptr+=1)[] = 3.5290931864350043589695360424229875206947326660156250000000000000000000;
  (ptr+=1)[] = 3.6033489800320319673687663453165441751480102539062500000000000000000000;
  (ptr+=1)[] = 3.6709704526379631772670109057798981666564941406250000000000000000000000;
  (ptr+=1)[] = 3.7315260425215535100562647130573168396949768066406250000000000000000000;
  (ptr+=1)[] = 3.7847865529069855128341259842272847890853881835937500000000000000000000;
  (ptr+=1)[] = 3.8307364572718167750053908093832433223724365234375000000000000000000000;
  (ptr+=1)[] = 3.8695707876329894503442119457758963108062744140625000000000000000000000;
  (ptr+=1)[] = 3.9016774013682433697169926745118573307991027832031250000000000000000000;
  (ptr+=1)[] = 3.9276061421605548140689734282204881310462951660156250000000000000000000;
  (ptr+=1)[] = 3.9480279732894896227435310720466077327728271484375000000000000000000000;
  (ptr+=1)[] = 3.9636883003303475803136279864702373743057250976562500000000000000000000;
  (ptr+=1)[] = 3.9753592301354792049039588164305314421653747558593750000000000000000000;
  (ptr+=1)[] = 3.9837953659684881557723201694898307323455810546875000000000000000000000;
  (ptr+=1)[] = 3.9896969703921958405601344566093757748603820800781250000000000000000000;
  (ptr+=1)[] = 3.9936830958126972035415747086517512798309326171875000000000000000000000;
  (ptr+=1)[] = 3.9962758099085142760031885700300335884094238281250000000000000000000000;
  (ptr+=1)[] = 3.9978951735278598356160273397108539938926696777343750000000000000000000;
  (ptr+=1)[] = 3.9988633867338578831152062775800004601478576660156250000000000000000000;
  (ptr+=1)[] = 3.9994156749684628415764109377050772309303283691406250000000000000000000;
  (ptr+=1)[] = 3.9997151312716319182527513476088643074035644531250000000000000000000000;
  (ptr+=1)[] = 3.9998688563346247448748727038037031888961791992187500000000000000000000;
  (ptr+=1)[] = 3.9999432486297279432108098262688145041465759277343750000000000000000000;
  (ptr+=1)[] = 3.9999770287013616254512271552812308073043823242187500000000000000000000;
  (ptr+=1)[] = 3.9999913492087468824820462032221257686614990234375000000000000000000000;
);

function kot_init(f, res)
instance(ia0, b0, b1, b2, b3, b4, a0, a1, a2, a3, a4, alpha, iR9, TdivC7, C7divT)
global(srate)
local(fs, ap2, ap3, ap4, targetFreq, x0, x1, x2, x3, x4, x5, x6, x7)
(
  fs = srate;
  targetFreq = 4194;
  alpha = targetFreq*2*$pi / tan(targetFreq * $pi/fs);
  
  ap2 = alpha*alpha;
  ap3 = alpha*ap2;
  ap4 = alpha*ap3;
  
  x0 = 0.01*alpha;
  x1 = ap3*(0.0000000060600000000000018208566131391792225491244039403682108968496323*res + 0.0000000014969999999999998969869420840906291958471996395019232295453548);
  x2 = ap2*(0.0000201000000000000006786238238021269353339448571205139160156250000000*res + 0.0000080100000000000012363070636678408220632263692095875740051269531250);
  x3 = ap4*(0.0000000000000089100000000000000257676479892952404404063860426932208725*res + 0.0000000000000008910000000000002786780816262836559381456364532445024729);
  x4 = x2 + x3;
  x5 = 0.02*alpha;
  x6 = 2*x1;
  x7 = -4*x3;
  
  b0 = x0 + x1 + x4;
  b1 = x5 - x6 + x7;
  b2 = -2*x2 + 6*x3;
  b3 = -x5 + x6 + x7;
  b4 = -x0 - x1 + x4;
  
  x0 = alpha*(0.0000100000000000000008180305391403130954586231382563710212707519531250*res + 0.0106009999999999993125499031521030701696872711181640625000000000000000);
  x1 = ap3*(0.0000000000608910000000000045891701104973771450229458324088227527681738*res + 0.0000000008970891000000000759592460660579466696917805279554158914834261);
  x2 = ap2*(0.0000001060000000000000094969808384602616424530197036801837384700775146*res + 0.0000060997000000000010778533447719507165629693190567195415496826171875);
  x3 = ap4*(0.0000000000000089100000000000000257676479892952404404063860426932208725*res + 0.0000000000000008910000000000002786780816262836559381456364532445024729);
  x4 = x2 + x3 + 1.0;
  x5 = 2*x1;
  x6 = 2*x0;
  x7 = -4*x3 + 4.0;

  a0 = x0 + x1 + x4;
  a1 = -x5 + x6 + x7;
  a2 = -2*x2 + 6*x3 + 6.0;
  a3 = x5 - x6 + x7;
  a4 =  -x0 - x1 + x4;

  ia0 = 1/a0;

  a1 = a1 * ia0;
  a2 = a2 * ia0;
  a3 = a3 * ia0;
  a4 = a4 * ia0;
  b0 = b0 * ia0;
  b1 = b1 * ia0;
  b2 = b2 * ia0;
  b3 = b3 * ia0;
  b4 = b4 * ia0;
  
  iR9 = 0.0001;
  TdivC7 = 10000000.0/fs;
  C7divT = 1/TdivC7;
);


function kot_eval(sample) 
instance(
  ia0, b0, b1, b2, b3, b4, a0, a1, a2, a3, a4,
  ic, icOut, Iin, iR9, TdivC7, C7divT
  dx1, dx2, dx3, dx4, dy1, dy2, dy3, dy4, sgn, 
  ptr, ptr2,
  xk, yk, xkm1, ykm1, xkm2, ykm2, c0, c1, c2,
)
global(kot_LUT_x, kot_LUT_y)
local(y, Vc, vout, x1, x2, y1, y2)
(
  /////////////////////////////////////////////
  // Linear tone filter part
  /////////////////////////////////////////////
  y = b0 * sample + b1 * dx1 + b2 * dx2 + b3 * dx3 + b4 * dx4
                  - a1 * dy1 - a2 * dy2 - a3 * dy3 - a4 * dy4;

  dx4 = dx3;
  dx3 = dx2;
  dx2 = dx1;  
  dx1 = sample;

  dy4 = dy3;
  dy3 = dy2;
  dy2 = dy1;  
  dy1 = y;
  
  /*y = b0 * sample + dx1;
  dx1 = b1 * sample - a1 * y + dx2;
  dx2 = b2 * sample - a2 * y + dx3;
  dx3 = b3 * sample - a3 * y + dx4;
  dx4 = b4 * sample - a4 * y;*/
  
  /////////////////////////////////////////////
  // Compute input current
  /////////////////////////////////////////////
  Vc = (y*iR9 + ic)/(TdivC7+iR9);
  Iin = (y-Vc)*iR9;
  ic = Vc*C7divT;

  sgn = sign(Iin);
  icOut = abs(Iin);

  icOut > 0.0031 ?
  (
    vout = 4;
    icOut *= 0.99999;
  ) : (
    ptr   = kot_LUT_x;
    ptr2  = kot_LUT_y;
    while( icOut > ptr[] )
    (
      ptr += 1;
      ptr2 += 1;
    );

    y2 = ptr2[];
    y1 = (ptr2 - 1)[]; 
    x2 = ptr[];
    x1 = (ptr - 1)[];

    vout = ((y2-y1) / (x2-x1)) * (icOut - x1) + y1;
  );
  
  xk = vout*sgn*.2;
  yk = c0 * (xk - xkm1 - xkm1 + xkm2) + c1 * yk + c2 * ykm2;
    
  ykm2 = ykm1;
  ykm1 = yk;
    
  xkm2 = xkm1;
  xkm1 = xk;
   
  yk
);

function kot_reset() 
instance(b0, b1, b2, b3, b4, b5, b6, b7, a0, a1, a2, a3, a4, a5, a6, a7, ic, vout
         dx1, dx2, dx3, dx4, dy1, dy2, dy3, dy4)
global()
local()
(
  dx1 = dx2 = dx3 = dx4 = 0.00000001;
  dy1 = 1.1285 / 10000000000000000;
  dy2 = 4.7388 / 10000000000000000;
  dy3 = -1.1765 / 10000000000000000;
  dy4 = -4.7859 / 10000000000000000;
  ic = 3.686/1000000000000000000000000;
);

function init_kot_lut(freemem)
global(kot_LUT_x, kot_LUT_y)
instance()
local()
(
  freemem = (kot_LUT_x = freemem) + 256;
  freemem = (kot_LUT_y = freemem) + 256;
  kot_lut(kot_LUT_x, kot_LUT_y);
  
  freemem
);

function quick_ellip(x)
local()
instance(y, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16)
global()
(
  // Elliptical filter at 0.25
  y = 0.03974403712835188 * x + s1;
  s1 = 0.11443117839583584 * x - -1.2209793606380654 * y + s2;
  s2 = 0.4102732984609602 * x - 6.918940386446262 * y + s3;
  s3 = 0.8255281436307241 * x - -7.438409047076798 * y + s4;
  s4 = 1.6689828207164152 * x - 20.47654014058037 * y + s5;
  s5 = 2.5256753272317622 * x - -19.21733444638215 * y + s6;
  s6 = 3.6193770241123127 * x - 33.69411950162771 * y + s7;
  s7 = 4.250403515943048 * x - -27.235417392156258 * y + s8;
  s8 = 4.641846929462009 * x - 33.46680351213294 * y + s9;
  s9 = 4.25040351594302 * x - -22.8021725145997 * y + s10;
  s10 = 3.6193770241123016 * x - 20.29444701618275 * y + s11;
  s11 = 2.525675327231766 * x - -11.231790923026374 * y + s12;
  s12 = 1.6689828207164181 * x - 7.173357397659418 * y + s13;
  s13 = 0.8255281436307251 * x - -2.9956603900306376 * y + s14;
  s14 = 0.41027329846095995 * x - 1.2866484319363045 * y + s15;
  s15 = 0.11443117839583594 * x - -0.3305293493933626 * y + s16;
  s16 = 0.0397440371283519 * x - 0.07745428581611816 * y;
  
  y
);

function init_cheap_rm_am(shift, offset)
instance(t, dt, sin_1, sin_2, osc_coeff, half_offset)
global(srate)
local(piblock, w)
(
  half_offset = 0.5 * offset;
  piblock = 200 * $pi;
  dt = 2.0 * $pi * shift / srate;
  (t > piblock) ? t -= piblock;
  
  w = dt;
  osc_coeff = 2.0 * cos(w);
  t += dt;
  sin_1 = - cos(- w + t);
  sin_2 = - cos(- 2.0 * w + t);
  t -= dt;
);

function eval_cheap_rm_am(x)
instance(st, t, dt, osc_coeff, sin_1, sin_2, half_offset)
global()
local(mul)
(
  t += dt;
  
  st = osc_coeff * sin_1 - sin_2;
  sin_2 = sin_1;
  sin_1 = st;

  mul = 1.0 - half_offset;
  0.25 * x * (st * (1.0 - half_offset) + half_offset);
);


function init_cheapest_freq_shifter(shift)
instance(osc_coeff_t1, osc_coeff_t2,
         cos_t1_1, cos_t1_2, sin_t1_1, sin_t1_2,
         cos_t2_1, cos_t2_2, sin_t2_1, sin_t2_2,
         t1,  t2, dt1, dt2)
local(ip, piblock, w)
global(srate)
(
  piblock = 200 * $pi;
  //dt1 = 2.0 * $pi * 0.251;  // oscillating at srate / 4
  dt1 = 2.0 * $pi * 0.25;  // oscillating at srate / 4
  dt2 = dt1 + 2.0 * $pi * shift / srate;
  (t1 > piblock) ? t1 -= piblock;
  (t2 > piblock) ? t2 -= piblock;
  
  w = dt1;
  osc_coeff_t1 = 2.0 * cos(w);
  t1 += dt1;
  cos_t1_1 = sin(- w + t1);
  cos_t1_2 = sin(- 2.0*w + t1);
  sin_t1_1 = - cos(- w + t1);
  sin_t1_2 = - cos(- 2.0*w + t1);
  t1 -= dt1;
  
  w = dt2;
  osc_coeff_t2 = 2.0 * cos(w);
  t2 += dt2;
  cos_t2_1 = sin(- w + t2);
  cos_t2_2 = sin(- 2.0 * w + t2);
  sin_t2_1 = - cos(- w + t2);
  sin_t2_2 = - cos(- 2.0 * w + t2);
  t2 -= dt2;
);


function eval_cheapest_freq_shifter(left, right)
instance(
  osc_coeff_t1, osc_coeff_t2,
  l1, l2,
  r1, r2,
  dt1, dt2,
  t1, t2,
  cos_t1_1, cos_t1_2, sin_t1_1, sin_t1_2,
  cos_t2_1, cos_t2_2, sin_t2_1, sin_t2_2,
  l_out, r_out,
)
local(ct1, st1, ct2, st2)
global(ssl, ssr)
(
  t1 += dt1;
  t2 += dt2;
  
  ct1 = osc_coeff_t1 * cos_t1_1 - cos_t1_2;
  cos_t1_2 = cos_t1_1;
  cos_t1_1 = ct1;
  
  ct2 = osc_coeff_t2 * cos_t2_1 - cos_t2_2;
  cos_t2_2 = cos_t2_1;
  cos_t2_1 = ct2;
  
  st1 = osc_coeff_t1 * sin_t1_1 - sin_t1_2;
  sin_t1_2 = sin_t1_1;
  sin_t1_1 = st1;
  
  st2 = osc_coeff_t2 * sin_t2_1 - sin_t2_2;
  sin_t2_2 = sin_t2_1;
  sin_t2_1 = st2;
  
  l_out = l1.quick_ellip(left * ct1) * ct2 + l2.quick_ellip(right * st1) * st2;
  r_out = r1.quick_ellip(right * ct1) * ct2 + r2.quick_ellip(right * st1) * st2;
);

function tanh(x)
local()
global()
instance()
(
  2/(1+exp(-2*x)) - 1
);

function init_dc_block(freq)
local(omega, sqh)
global(srate)
instance(c0, c1, c2)
(
  omega = 2.0 * $pi * freq / srate;
  sqh = sqrt(0.5);
  c0 = 1.0 - sqh * omega;
  c1 = 2.0 - sqrt(2) * omega - 0.5 * omega * omega;
  c2 = (1.0 - sqh * omega);
  c2 *= -c2;
);

function heavyDistortion(x)
local(dt, dl, legacy)
global(srate, oversampling)
instance(lastin, lastx, intx, xk, yk, xkm1, ykm1, xkm2, ykm2, c0, c1, c2)
(
  /* Power */
  dt = 44100 / oversampling / srate;
  
  // Find zero crossings
  /* dl contains spikes corresponding to direction changes */
  x = tanh(8*(x-.005));
  dl = ((x - lastin))*oversampling;
  lastin = x;

  // Determine the slow and the fast response
  lastx = lastx + .1*(dl-lastx)/overSampling;
  intx = intx + .01625*dt*(.25*x-intx)*(1+5.5*abs(intx));
  
  xk = 2*lastx+intx;
  yk = c0 * (xk - xkm1 - xkm1 + xkm2) + c1 * yk + c2 * ykm2;
    
  ykm2 = ykm1;
  ykm1 = yk;
    
  xkm2 = xkm1;
  xkm1 = xk;
   
  yk
);

higain_factor = 1.0 / (2.5*tanh(.5)*1.007);

